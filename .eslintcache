[{"C:\\Users\\LayLi\\Desktop\\msi\\src\\index.js":"1","C:\\Users\\LayLi\\Desktop\\msi\\src\\App.js":"2","C:\\Users\\LayLi\\Desktop\\msi\\src\\reportWebVitals.js":"3","C:\\Users\\LayLi\\Desktop\\msi\\src\\routes\\index.js":"4","C:\\Users\\LayLi\\Desktop\\msi\\src\\utils\\auth.js":"5","C:\\Users\\LayLi\\Desktop\\msi\\src\\components\\Frame\\Index.js":"6","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\Login.js":"7","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\PageNotFound.js":"8","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\products\\List.js":"9","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\products\\Edit.js":"10","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\dashboard\\index.js":"11","C:\\Users\\LayLi\\Desktop\\msi\\src\\services\\auth.js":"12","C:\\Users\\LayLi\\Desktop\\msi\\src\\utils\\request.js":"13","C:\\Users\\LayLi\\Desktop\\msi\\src\\services\\products.js":"14","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\notice\\index.js":"15","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\index.js":"16","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\reducers\\notice.js":"17","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\reducers\\product.js":"18","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\actions\\product.js":"19"},{"size":1007,"mtime":1609752912563,"results":"20","hashOfConfig":"21"},{"size":804,"mtime":1609748038327,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":851,"mtime":1609837584064,"results":"24","hashOfConfig":"21"},{"size":379,"mtime":1608610577772,"results":"25","hashOfConfig":"21"},{"size":2272,"mtime":1609839242325,"results":"26","hashOfConfig":"21"},{"size":2168,"mtime":1609840397690,"results":"27","hashOfConfig":"21"},{"size":168,"mtime":1608524751734,"results":"28","hashOfConfig":"21"},{"size":3389,"mtime":1609839440142,"results":"29","hashOfConfig":"21"},{"size":3620,"mtime":1609840479982,"results":"30","hashOfConfig":"21"},{"size":1861,"mtime":1609839118976,"results":"31","hashOfConfig":"21"},{"size":98,"mtime":1609747847169,"results":"32","hashOfConfig":"21"},{"size":837,"mtime":1609836557281,"results":"33","hashOfConfig":"21"},{"size":421,"mtime":1609747859120,"results":"34","hashOfConfig":"21"},{"size":1231,"mtime":1609839311331,"results":"35","hashOfConfig":"21"},{"size":348,"mtime":1609839027588,"results":"36","hashOfConfig":"21"},{"size":214,"mtime":1609298115020,"results":"37","hashOfConfig":"21"},{"size":265,"mtime":1609836705705,"results":"38","hashOfConfig":"21"},{"size":236,"mtime":1609316762258,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1hdhv15",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\LayLi\\Desktop\\msi\\src\\index.js",[],["84","85"],"C:\\Users\\LayLi\\Desktop\\msi\\src\\App.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\reportWebVitals.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\routes\\index.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\utils\\auth.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\components\\Frame\\Index.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\Login.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\PageNotFound.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\products\\List.js",["86"],"import React, { useEffect } from 'react'\r\nimport { Card, Table, Button, Popconfirm, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listApi, delOne, modifyOne } from \"../../../services/products\";\r\nimport './list.css'\r\nimport { loadProduct } from \"../../../store/actions/product\";\r\n\r\nfunction List(props) {\r\n    const columns = [\r\n        {\r\n            title: '序号',\r\n            key: 'id',\r\n            width: 80,\r\n            align: 'center',\r\n            render: (txt, record, index) => index + 1\r\n        },\r\n        {\r\n            title: '名字',\r\n            dataIndex: 'name'\r\n        },\r\n        {\r\n            title: '进度',\r\n            dataIndex: 'progress'\r\n        },\r\n        {\r\n            title: '状态',\r\n            dataIndex: 'onDoing',\r\n            render: (txt, record) => (record.progress === 1) ? \"已完成\" : (record.onDoing ? \"进行中\" : \"暂停中\")\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: (txt, record, index) => {\r\n                return (<div>\r\n                    <Button type=\"primary\" size=\"small\" onClick={() => { props.history.push(`/admin/products/edit/${record.id}`) }}>\r\n                        修改\r\n                    </Button>\r\n                    <Popconfirm title=\"确定删除此项？\"\r\n                        onCancel={() => message.info('用户取消删除')}\r\n                        onConfirm={() => {\r\n                            delOne(record.id)\r\n                                .then(() => {\r\n                                    props.dispatch(loadProduct({}))\r\n                                })\r\n                            message.info('删除成功')\r\n                        }}>\r\n                        <Button style={{ margin: \"0 1rem\" }} type=\"danger\" size=\"small\">删除</Button>\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size=\"small\" onClick={() => props.history.push(`/admin/dashboard/${record.id}`)}>\r\n                        详情\r\n                    </Button>\r\n                    <Button style={{ margin: \"0 1rem\" }} type=\"primary\" size=\"small\"\r\n                        onClick={() => {\r\n                            modifyOne(record.id, { id: record.id, name: record.name, progress: record.progress, content: record.content, onDoing: !record.onDoing })\r\n                                .then(response => {\r\n                                    listApi().then(value => {\r\n                                        props.dispatch(loadProduct({}))\r\n                                    })\r\n                                })\r\n                            }}>\r\n                        {(record.progress === 1) ? \"\" : (record.onDoing ? \"暂停\" : \"开始\")}\r\n                    </Button>\r\n                </div>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        props.dispatch(loadProduct({}))\r\n    }, [])\r\n\r\n    return (\r\n        <Card title=\"项目列表\" extra={<Button type=\"primary\" size=\"small\" onClick={() => props.history.push(\"/admin/products/edit\")}>新增</Button>}>\r\n            <Table rowClassName={record => (record.progress === 1) ? \"over\" : (record.onDoing ? \"doing\" : \"stop\")} rowKey=\"id\" pagination={{ defaultPageSize: 5 }} columns={columns} bordered dataSource={props.list} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default connect(state => state.product)(List)\r\n","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\products\\Edit.js",["87"],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Card, Input, Button, message } from \"antd\";\r\nimport BraftEditor from 'braft-editor'\r\nimport { connect } from \"react-redux\";\r\nimport 'braft-editor/dist/index.css'\r\n\r\nimport { creatApi, getOneById, modifyOne } from \"../../../services/products\";\r\nfunction Edit(props) {\r\n    const id = props.match.params.id;\r\n    const [editorState, setEditorState] = useState(BraftEditor.createEditorState())\r\n    \r\n    const onFinish = (values) => {\r\n        if (isNaN(id.charAt(id.length - 1))) {\r\n            creatApi({ ...values, content: editorState.toHTML() })\r\n                .then(response => {\r\n                    message.info(\"保存成功\");\r\n                    props.history.push('/admin/products');\r\n                })\r\n                .catch(error => {\r\n                    message.info(error);\r\n                })\r\n        } else {\r\n            modifyOne(Number(id.charAt(id.length - 1)), { ...values, content: editorState.toHTML() })\r\n                .then(response => {\r\n                    message.info(\"保存成功\");\r\n                    props.history.push('/admin/products');\r\n                })\r\n                .catch(error => {\r\n                    message.info(error);\r\n                })\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        message.info(\"提交错误\");\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleEditorChange = (v) => {\r\n        setEditorState(v)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isNaN(id.charAt(id.length - 1))) {\r\n        } else {\r\n            getOneById(Number(id.charAt(id.length - 1)))\r\n                .then(response => {\r\n                    setEditorState(BraftEditor.createEditorState(response.data.content));\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Card title={(isNaN(id.charAt(id.length - 1))) ? \"添加项目\" : \"修改项目\"}\r\n            extra={<Button type=\"default\" size=\"small\" onClick={() => props.history.push(\"/admin/products\")}>返回</Button>}>\r\n            <Form onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n                <Form.Item label=\"名字\" name=\"name\" \r\n                initialValue={isNaN(id.charAt(id.length - 1)) ? \"\" : props.list[(id.charAt(id.length - 1))].name} rules={[{ required: true, message: \"请输入项目名称\" }]}>\r\n                    <Input placeholder=\"请输入项目名称\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"项目进度\" name=\"progress\" \r\n                initialValue={isNaN(id.charAt(id.length - 1)) ? \"\" : props.list[(id.charAt(id.length - 1))].progress} rules={[{ required: true, message: '请输入项目进度' }, \r\n                ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                        if (value >= 0 && value <= 1) {\r\n                            return Promise.resolve();\r\n                        }\r\n                        else\r\n                            return Promise.reject('进度在0与1之间');\r\n                    },\r\n                }),]}>\r\n                    <Input placeholder=\"请输入项目进度\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"详情\"></Form.Item>\r\n                <BraftEditor\r\n                    value={editorState}\r\n                    onChange={(e) => handleEditorChange(e)}/>\r\n                <Form.Item >\r\n                    <Button htmlType=\"submit\" type=\"primary\">保存</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default connect(state => state.product)(Edit)","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\dashboard\\index.js",["88"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Form, Button } from \"antd\";\r\nimport BraftEditor from 'braft-editor'\r\nimport 'braft-editor/dist/index.css'\r\n\r\nimport { getOneById, modifyOne } from \"../../../services/products\";\r\n\r\nfunction Index(props) {\r\n\r\n    const id = props.match.params.id;\r\n    const [editorState, setEditorState] = useState(BraftEditor.createEditorState())\r\n    const handleEditorChange = (v) => { setEditorState(v) }\r\n\r\n    const save = () => {\r\n        props.history.push(\"/admin/products\")\r\n        getOneById(Number(id.charAt(id.length - 1)))\r\n            .then(value => {\r\n                modifyOne(value.data.id, {\r\n                    id: value.data.id,\r\n                    name: value.data.name,\r\n                    progress: value.data.progress,\r\n                    content: editorState.toHTML(),\r\n                    onDoing: value.data.onDoing\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isNaN(id.charAt(id.length - 1))) {\r\n        } else {\r\n            getOneById(Number(id.charAt(id.length - 1)))\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    setEditorState(BraftEditor.createEditorState(response.data.content));\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Card title=\"项目详情\" extra={\r\n            <Button type=\"primary\" size=\"small\" onClick={() => { props.history.push(\"/admin/products\") }}>退出</Button>}>\r\n            <Form >\r\n                <BraftEditor\r\n                    value={editorState}\r\n                    onChange={(e) => handleEditorChange(e)} />\r\n                <Form.Item >\r\n                    <Button type=\"primary\" onClick={save}>保存</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","C:\\Users\\LayLi\\Desktop\\msi\\src\\services\\auth.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\utils\\request.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\services\\products.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\notice\\index.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\index.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\reducers\\notice.js",["89"],"export default (state ={isAllRead:false,count:8},action)=>{\r\n    switch(action.type){\r\n        case \"READ_ALL\":\r\n            return{...state,isAllRead:true};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\reducers\\product.js",["90"],"export default (state={list:[],total:0},action)=>{\r\n    switch(action.type){\r\n       case 'PRODUCT_LOADED':           \r\n            return {...state,list:action.payload.data,total:action.payload.data.length}; \r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\actions\\product.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":71,"column":8,"nodeType":"97","endLine":71,"endColumn":10,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":51,"column":8,"nodeType":"97","endLine":51,"endColumn":10,"suggestions":"100"},{"ruleId":"95","severity":1,"message":"99","line":37,"column":8,"nodeType":"97","endLine":37,"endColumn":10,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":1,"nodeType":"104","endLine":8,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":1,"column":1,"nodeType":"104","endLine":8,"endColumn":3},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["107"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["108"],["109"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"112","fix":"114"},"Update the dependencies array to be: [props]",{"range":"115","text":"116"},"Update the dependencies array to be: [id]",{"range":"117","text":"118"},{"range":"119","text":"118"},[2818,2820],"[props]",[1794,1796],"[id]",[1307,1309]]