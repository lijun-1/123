[{"C:\\Users\\LayLi\\Desktop\\msi\\src\\index.js":"1","C:\\Users\\LayLi\\Desktop\\msi\\src\\App.js":"2","C:\\Users\\LayLi\\Desktop\\msi\\src\\reportWebVitals.js":"3","C:\\Users\\LayLi\\Desktop\\msi\\src\\routes\\index.js":"4","C:\\Users\\LayLi\\Desktop\\msi\\src\\utils\\auth.js":"5","C:\\Users\\LayLi\\Desktop\\msi\\src\\components\\Frame\\Index.js":"6","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\Login.js":"7","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\PageNotFound.js":"8","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\products\\List.js":"9","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\products\\Edit.js":"10","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\dashboard\\index.js":"11","C:\\Users\\LayLi\\Desktop\\msi\\src\\services\\auth.js":"12","C:\\Users\\LayLi\\Desktop\\msi\\src\\utils\\request.js":"13","C:\\Users\\LayLi\\Desktop\\msi\\src\\services\\products.js":"14","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\notice\\index.js":"15","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\index.js":"16","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\reducers\\notice.js":"17","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\reducers\\product.js":"18","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\actions\\product.js":"19"},{"size":1007,"mtime":1609298035486,"results":"20","hashOfConfig":"21"},{"size":803,"mtime":1608771358491,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":844,"mtime":1609295033320,"results":"24","hashOfConfig":"21"},{"size":379,"mtime":1608610577772,"results":"25","hashOfConfig":"21"},{"size":2351,"mtime":1609319273436,"results":"26","hashOfConfig":"21"},{"size":2222,"mtime":1609118007729,"results":"27","hashOfConfig":"21"},{"size":168,"mtime":1608524751734,"results":"28","hashOfConfig":"21"},{"size":2992,"mtime":1609321772948,"results":"29","hashOfConfig":"21"},{"size":4001,"mtime":1609321849068,"results":"30","hashOfConfig":"21"},{"size":1854,"mtime":1609321625788,"results":"31","hashOfConfig":"21"},{"size":100,"mtime":1608790849337,"results":"32","hashOfConfig":"21"},{"size":837,"mtime":1609316396872,"results":"33","hashOfConfig":"21"},{"size":421,"mtime":1608856131814,"results":"34","hashOfConfig":"21"},{"size":1196,"mtime":1609300346256,"results":"35","hashOfConfig":"21"},{"size":351,"mtime":1609301841226,"results":"36","hashOfConfig":"21"},{"size":214,"mtime":1609298115020,"results":"37","hashOfConfig":"21"},{"size":265,"mtime":1609323223743,"results":"38","hashOfConfig":"21"},{"size":236,"mtime":1609316762258,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1hdhv15",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\LayLi\\Desktop\\msi\\src\\index.js",[],["87","88"],"C:\\Users\\LayLi\\Desktop\\msi\\src\\App.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\reportWebVitals.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\routes\\index.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\utils\\auth.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\components\\Frame\\Index.js",["89","90","91","92","93"],"import React, {  useEffect,useState} from 'react'\r\nimport { Layout, Menu, Dropdown, Avatar,Badge} from 'antd';\r\nimport { adminRoutes } from \"../../routes\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./frame.css\"\r\nimport { clearToken } from \"../../utils/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport { listApi } from '../../services/products';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\nconst routes = adminRoutes.filter(route => route.isShow);\r\n\r\nfunction Index(props) {\r\n\r\n\r\n  \r\n  const popMenu = (<Menu onClick={(p)=>{\r\n    if(p.key=='logOut'){\r\n      props.history.push('/login');\r\n      clearToken();\r\n    } \r\n    if(p.key=='noti'){\r\n      props.history.push('/admin/notice');\r\n    }\r\n  }}>\r\n    <Menu.Item key=\"noti\">通知中心</Menu.Item>\r\n    <Menu.Item key=\"setting\">设置</Menu.Item>\r\n    <Menu.Item key=\"logOut\">退出</Menu.Item>\r\n  </Menu>)\r\n  return (\r\n    <Layout>\r\n      <Header className=\"header\">\r\n        <div className=\"logo\" >\r\n          <h1 style={{ color: \"white\" }}>项目管理系统 总任务数{props.product.total}</h1>\r\n        </div>\r\n        <Dropdown overlay={popMenu}>\r\n          <div>\r\n            <Avatar>U</Avatar>\r\n              <Badge dot={!props.notice.isAllRead}>\r\n                <span style={{ color: \"white\" }}>超级管理员</span> \r\n              </Badge>          \r\n          </div>\r\n        </Dropdown>\r\n      </Header>\r\n      <Layout>\r\n        <Sider width={200} className=\"site-layout-background\">\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1']}\r\n            style={{ height: '100%', borderRight: 0 }}\r\n          >\r\n            {routes.map(route => {\r\n              return (<Menu.Item key={route.path} onClick={p => props.history.push(p.key)}>{route.title}</Menu.Item>)\r\n            })}\r\n          </Menu>\r\n        </Sider>\r\n        <Layout style={{ padding: '16px' }}>\r\n\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              padding: 24,\r\n              margin: 0,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n            {props.children}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => state;\r\n\r\nexport default connect(mapStateToProps) (withRouter(Index));\r\n","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\Login.js",["94","95"],"import React from 'react'\r\nimport { Form, Input, Button, Checkbox, Card, message } from 'antd';\r\nimport { setToken } from \"../utils/auth\";\r\nimport \"./login.css\";\r\nimport { loginApi } from \"../services/auth\";\r\nvar userName = \"\";\r\nvar password = \"\";\r\n\r\nfunction Login(props) {\r\n    const onFinish = (values) => {     \r\n        loginApi().then(value=>{       \r\n            userName=value.data.username;\r\n            password=value.data.password;\r\n        })\r\n        if(userName==values.username&&password==values.password){\r\n            setToken(values.username);\r\n            props.history.push(\"/admin/products\");\r\n        }else{\r\n            message.info(\"用户名或密码错误\");\r\n        }\r\n    };\r\n    return (\r\n\r\n        <Card title=\"登陆界面\" className=\"login-form\">\r\n            <Form\r\n                name=\"normal_login\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入用户名',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input  placeholder=\"用户名\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入密码',\r\n                        },\r\n                    ]}\r\n               >\r\n                    <Input\r\n                        type=\"password\"\r\n                        placeholder=\"密码\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                    <Checkbox>记住我</Checkbox>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        登录\r\n                        </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\PageNotFound.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\products\\List.js",["96","97","98","99","100"],"import React,{useEffect,useState} from 'react'\r\nimport { Card,Table,Button,Popconfirm, message} from \"antd\";\r\nimport { listApi,delOne, modifyOne } from \"../../../services/products\";\r\nimport './list.css'\r\nimport { connect } from \"react-redux\";\r\nimport { loadProduct} from \"../../../store/actions/product\";\r\n\r\n\r\nfunction List(props) {\r\n\r\n    useEffect(()=>{\r\n        props.dispatch(loadProduct({}))  \r\n    },[])\r\n\r\n    const columns =[{\r\n        title: '序号',\r\n        key: 'id',\r\n        width: 80,\r\n        align: 'center',\r\n        render:(txt,record,index)=>index+1\r\n\r\n    },{\r\n        title: '名字',\r\n        dataIndex: 'name'\r\n    },{\r\n        title: '进度',\r\n        dataIndex: 'progress'\r\n    },{\r\n        title:'状态',\r\n        dataIndex:'onDoing',\r\n        render:(txt,record)=>(record.progress==1)?\"已完成\":(record.onDoing?\"进行中\":\"暂停中\")\r\n    },{\r\n        title: '操作',\r\n        render:(txt,record,index)=>{\r\n            return(<div>\r\n                <Button type=\"primary\" size=\"small\" onClick={()=>{props.history.push(`/admin/products/edit/${record.id}`)}}>\r\n                    修改\r\n                </Button>\r\n                <Popconfirm title=\"确定删除此项？\" \r\n                onCancel={()=>message.info('用户取消删除')} \r\n                onConfirm={()=>{\r\n                    delOne(record.id)\r\n                    .then(()=>{\r\n                        props.dispatch(loadProduct({}))\r\n                    })\r\n                    message.info('删除成功')\r\n                }}>\r\n                    <Button style={{margin:\"0 1rem\"}} type=\"danger\" size=\"small\">\r\n                        删除\r\n                    </Button>\r\n                </Popconfirm>\r\n                <Button type=\"primary\" size=\"small\" onClick={()=>props.history.push(`/admin/dashboard/${record.id}`)}>\r\n                        详情\r\n                </Button>\r\n                <Button style={{margin:\"0 1rem\"}} type=\"primary\" size=\"small\" \r\n                onClick={()=>{\r\n                    modifyOne(record.id,{id:record.id,name:record.name,progress:record.progress,content:record.content,onDoing:!record.onDoing})\r\n                    .then(response=>{\r\n                        listApi().then(value=>{\r\n                            props.dispatch(loadProduct({}))\r\n                        })\r\n                    })\r\n                }}>\r\n                    {(record.progress==1)?\"\":(record.onDoing?\"暂停\":\"开始\")}\r\n                </Button>\r\n            </div>\r\n\r\n            )\r\n        }\r\n    }\r\n]\r\n    return (\r\n        <Card title=\"项目列表\" extra={<Button type=\"primary\" size=\"small\" onClick={()=>props.history.push(\"/admin/products/edit\")}>新增</Button>}>\r\n            <Table rowClassName={record=>(record.progress==1)?\"over\":(record.onDoing?\"doing\":\"stop\")} rowKey=\"id\" pagination={{defaultPageSize:5}}  columns={columns} bordered dataSource={props.list}/>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default  connect(state=>state.product)(List)\r\n","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\products\\Edit.js",["101"],"import React, {  useEffect,useState} from 'react'\r\nimport { Form, Card, Input, Button, message } from \"antd\";\r\nimport { creatApi, getOneById,modifyOne } from \"../../../services/products\";\r\nimport BraftEditor from 'braft-editor'\r\nimport { connect } from \"react-redux\";\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css'\r\n\r\nfunction Edit(props) {\r\n    const[editorState,setEditorState] = useState(BraftEditor.createEditorState())\r\n    useEffect(() => {        \r\n        if (isNaN(props.location.pathname.charAt(props.location.pathname.length - 1))) {\r\n        } else {\r\n            getOneById(Number(props.location.pathname.charAt(props.location.pathname.length - 1)))\r\n            .then(response => {\r\n            setEditorState(BraftEditor.createEditorState(response.data.content));\r\n            });\r\n        }\r\n    },[]);\r\n\r\n\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n       \r\n        if (isNaN(props.location.pathname.charAt(props.location.pathname.length - 1))) {\r\n            creatApi({...values,content:editorState.toHTML()})\r\n            .then(response => {\r\n                message.info(\"保存成功\");\r\n                props.history.push('/admin/products');\r\n            })\r\n            .catch(error => {\r\n                message.info(error);\r\n            })\r\n        }else{\r\n            modifyOne(Number(props.location.pathname.charAt(props.location.pathname.length - 1)),{...values,content:editorState.toHTML()})\r\n            .then(response => {\r\n                message.info(\"保存成功\");\r\n                props.history.push('/admin/products');\r\n            })\r\n            .catch(error => {\r\n                message.info(error);\r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        message.info(\"提交错误\");\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleEditorChange = (v) => {\r\n        setEditorState(v)\r\n    }\r\n\r\n    return (\r\n        <Card title={(isNaN(props.location.pathname.charAt(props.location.pathname.length - 1)))?\"添加项目\":\"修改项目\"} \r\n        extra={<Button type=\"default\" size=\"small\" onClick={()=>props.history.push(\"/admin/products\")}>返回</Button>}>\r\n            <Form onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n                <Form.Item label=\"名字\" name=\"name\" initialValue={isNaN(props.location.pathname.charAt(props.location.pathname.length - 1))?\"\":props.list[(props.location.pathname.charAt(props.location.pathname.length - 1))].name} rules={[{ required: true, message: \"请输入项目名称\"}]}>\r\n                    <Input placeholder=\"请输入项目名称\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"项目进度\" name=\"progress\" initialValue={isNaN(props.location.pathname.charAt(props.location.pathname.length - 1))?\"\":props.list[(props.location.pathname.charAt(props.location.pathname.length - 1))].progress}  rules={[{ required: true, message: '请输入项目进度' }, ({ getFieldValue }) => ({\r\n                    validator(rule, value) {\r\n                        if (value >= 0 && value <= 1) {\r\n                            return Promise.resolve();\r\n                        }\r\n                        else\r\n                            return Promise.reject('进度在0与1之间');\r\n                    },\r\n                }),]}>\r\n                    <Input placeholder=\"请输入项目进度\" />\r\n                </Form.Item>\r\n                \r\n                <Form.Item label=\"详情\">\r\n                \r\n                </Form.Item>\r\n                <BraftEditor\r\n                    value={editorState}\r\n                    onChange={(e)=>handleEditorChange(e)}\r\n                   \r\n                />\r\n                \r\n                <Form.Item >\r\n                    <Button htmlType=\"submit\" type=\"primary\">保存</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default  connect(state=>state.product)(Edit)","C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\dashboard\\index.js",["102"],"import React, {  useEffect,useState} from 'react'\r\nimport { Card,Form,Button} from \"antd\";\r\nimport BraftEditor from 'braft-editor'\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css'\r\nimport { getOneById, modifyOne } from \"../../../services/products\";\r\n\r\nfunction Index(props) {\r\n\r\n    const[editorState,setEditorState] = useState(BraftEditor.createEditorState())\r\n    useEffect(() => {        \r\n        if (isNaN(props.location.pathname.charAt(props.location.pathname.length - 1))) {\r\n        } else {\r\n            getOneById(Number(props.location.pathname.charAt(props.location.pathname.length - 1)))\r\n            .then(response => {\r\n            console.log(response.data);\r\n            setEditorState(BraftEditor.createEditorState(response.data.content));\r\n            });\r\n        }\r\n    },[]);\r\n\r\n    const handleEditorChange = (v) => {\r\n        setEditorState(v)\r\n    }\r\n    const save = ()=>{\r\n    props.history.push(\"/admin/products\")\r\n    getOneById(Number(props.location.pathname.charAt(props.location.pathname.length - 1)))\r\n    .then(value=>{\r\n        modifyOne(value.data.id,{id:value.data.id,name:value.data.name,progress:value.data.progress,content:editorState.toHTML(),onDoing:value.data.onDoing})   \r\n    })\r\n    }\r\n    \r\n\r\n    return (\r\n        <Card title=\"项目详情\" extra={\r\n        <Button type=\"primary\" size=\"small\" onClick={()=>{props.history.push(\"/admin/products\")}}>退出</Button>\r\n        }>\r\n            <Form >\r\n            <BraftEditor\r\n                   \r\n                   value={editorState}\r\n                   onChange={(e)=>handleEditorChange(e)} \r\n                   \r\n                />\r\n                <Form.Item >\r\n                    <Button type=\"primary\" onClick={save}>保存</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","C:\\Users\\LayLi\\Desktop\\msi\\src\\services\\auth.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\utils\\request.js",["103"],"import axios from \"axios\";\r\nimport { getToken } from \"./auth\";\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:3004',\r\n    timeout: 5000\r\n})\r\n\r\ninstance.interceptors.request.use(\r\n    function(config){\r\n        config.headers[\"authorization\"] = \"Bearer\" + getToken();\r\n        return config;\r\n    },\r\n    function(error){\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\ninstance.interceptors.response.use({\r\n    function(response){\r\n        return response.data;\r\n    },\r\n    function(error){\r\n        return Promise.reject(error);\r\n    }\r\n})\r\n\r\nexport function get(url){\r\n    return instance.get(url)\r\n}\r\n\r\nexport function post(url,data){\r\n    return instance.post(url,data)\r\n}\r\n\r\nexport function put(url,data){\r\n    return instance.put(url,data)\r\n}\r\n\r\nexport function del(url){\r\n    return instance.delete(url)\r\n}","C:\\Users\\LayLi\\Desktop\\msi\\src\\services\\products.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\pages\\admin\\notice\\index.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\index.js",[],"C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\reducers\\notice.js",["104"],"export default (state ={isAllRead:false,count:8},action)=>{\r\n    switch(action.type){\r\n        case \"READ_ALL\":\r\n            return{...state,isAllRead:true};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\reducers\\product.js",["105"],"export default (state={list:[],total:0},action)=>{\r\n    switch(action.type){\r\n       case 'PRODUCT_LOADED':           \r\n            return {...state,list:action.payload.data,total:action.payload.data.length}; \r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\LayLi\\Desktop\\msi\\src\\store\\actions\\product.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":18,"nodeType":"112","messageId":"113","endLine":1,"endColumn":27},{"ruleId":"110","severity":1,"message":"114","line":1,"column":28,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"115","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":18,"column":13,"nodeType":"118","messageId":"119","endLine":18,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":22,"column":13,"nodeType":"118","messageId":"119","endLine":22,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":15,"column":20,"nodeType":"118","messageId":"119","endLine":15,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":15,"column":47,"nodeType":"118","messageId":"119","endLine":15,"endColumn":49},{"ruleId":"110","severity":1,"message":"114","line":1,"column":25,"nodeType":"112","messageId":"113","endLine":1,"endColumn":33},{"ruleId":"120","severity":1,"message":"121","line":13,"column":7,"nodeType":"122","endLine":13,"endColumn":9,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"117","line":31,"column":46,"nodeType":"118","messageId":"119","endLine":31,"endColumn":48},{"ruleId":"116","severity":1,"message":"117","line":64,"column":38,"nodeType":"118","messageId":"119","endLine":64,"endColumn":40},{"ruleId":"116","severity":1,"message":"117","line":74,"column":58,"nodeType":"118","messageId":"119","endLine":74,"endColumn":60},{"ruleId":"120","severity":1,"message":"124","line":19,"column":7,"nodeType":"122","endLine":19,"endColumn":9,"suggestions":"125"},{"ruleId":"120","severity":1,"message":"124","line":20,"column":7,"nodeType":"122","endLine":20,"endColumn":9,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":22,"column":5,"nodeType":"129","messageId":"119","endLine":22,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":1,"column":1,"nodeType":"132","endLine":8,"endColumn":2},{"ruleId":"130","severity":1,"message":"131","line":1,"column":1,"nodeType":"132","endLine":8,"endColumn":3},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'listApi' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["135"],"React Hook useEffect has a missing dependency: 'props.location.pathname'. Either include it or remove the dependency array.",["136"],["137"],"no-dupe-keys","Duplicate key 'function'.","ObjectExpression","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},"Update the dependencies array to be: [props]",{"range":"143","text":"144"},"Update the dependencies array to be: [props.location.pathname]",{"range":"145","text":"146"},{"range":"147","text":"146"},[406,408],"[props]",[817,819],"[props.location.pathname]",[793,795]]